filter(`Note Moyenne` > 0)
# Créer le boxplot
ggplot(df_notes_valides, aes(y = `Note Moyenne`)) +
geom_boxplot(fill = "lightblue", outlier.color = "red") +
labs(title = "Boxplot des notes moyennes (hors jeux non notés)", y = "Note Moyenne") +
theme_minimal()
# Courbe de densité
ggplot(df_notes, aes(x = `Note Moyenne`)) +
geom_density(fill = "orange", alpha = 0.5) +
labs(title = "Courbe de densité des notes moyennes", x = "Note Moyenne") +
theme_minimal()
# ---------------------------
# 1. Tendance générale des notes
# ---------------------------
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"))
# ---------------------------
# 1. Tendance générale des notes
# ---------------------------
df_notes <- df %>% filter(`Note Moyenne` > 0)
# Histogramme
ggplot(df_notes, aes(x = `Note Moyenne`)) +
geom_histogram(binwidth = 0.1, fill = "steelblue", color = "white") +
labs(title = "Distribution des notes moyennes des jeux", x = "Note Moyenne", y = "Nombre de jeux") +
theme_minimal()
# Filtrer les notes valides (supérieures à 0)
df_notes_valides <- df %>%
filter(`Note Moyenne` > 0)
# Créer le boxplot
ggplot(df_notes_valides, aes(y = `Note Moyenne`)) +
geom_boxplot(fill = "lightblue", outlier.color = "red") +
labs(title = "Boxplot des notes moyennes (hors jeux non notés)", y = "Note Moyenne") +
theme_minimal()
# Courbe de densité
ggplot(df_notes, aes(x = `Note Moyenne`)) +
geom_density(fill = "orange", alpha = 0.5) +
labs(title = "Courbe de densité des notes moyennes", x = "Note Moyenne") +
theme_minimal()
# ---------------------------
# 1. Tendance générale des notes
# ---------------------------
# Chargement des données
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"))
# Nettoyage : convertir les virgules en points puis transformer en numérique
df$`Note Moyenne` <- as.numeric(gsub(",", ".", df$`Note Moyenne`))
# ---------------------------
# 1. Tendance générale des notes
# ---------------------------
# Filtrer uniquement les jeux notés (note > 0)
df_notes <- df %>% filter(`Note Moyenne` > 0)
# Histogramme de la distribution des notes
ggplot(df_notes, aes(x = `Note Moyenne`)) +
geom_histogram(binwidth = 0.1, fill = "steelblue", color = "white") +
labs(title = "Distribution des notes moyennes des jeux", x = "Note Moyenne", y = "Nombre de jeux") +
theme_minimal()
# Boxplot des notes valides
ggplot(df_notes, aes(y = `Note Moyenne`)) +
geom_boxplot(fill = "lightblue", outlier.color = "red") +
labs(title = "Boxplot des notes moyennes (hors jeux non notés)", y = "Note Moyenne") +
theme_minimal()
# Courbe de densité des notes
ggplot(df_notes, aes(x = `Note Moyenne`)) +
geom_density(fill = "orange", alpha = 0.5, color = "black") +
labs(title = "Courbe de densité des notes moyennes", x = "Note Moyenne", y = "Densité") +
theme_minimal()
# ---------------------------
# 1. Tendance générale des notes
# ---------------------------
# Chargement des données
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"))
# ---------------------------
# 1. Tendance générale des notes
# ---------------------------
# Chargement des données
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"), show_col_types = FALSE)
# Nettoyage : convertir les virgules en points puis transformer en numérique
df$`Note Moyenne` <- as.numeric(gsub(",", ".", df$`Note Moyenne`))
# ---------------------------
# 1. Tendance générale des notes
# ---------------------------
# Chargement des données
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"), show_col_types = FALSE)
# Nettoyage : convertir les virgules en points puis transformer en numérique
df$`Note Moyenne` <- as.numeric(gsub(",", ".", df$`Note Moyenne`))
# Filtrer uniquement les jeux notés (note > 0)
df_notes <- df %>% filter(`Note Moyenne` > 0)
# Histogramme de la distribution des notes
ggplot(df_notes, aes(x = `Note Moyenne`)) +
geom_histogram(binwidth = 0.1, fill = "steelblue", color = "white") +
labs(title = "Distribution des notes moyennes des jeux", x = "Note Moyenne", y = "Nombre de jeux") +
theme_minimal()
# Boxplot des notes valides
ggplot(df_notes, aes(y = `Note Moyenne`)) +
geom_boxplot(fill = "lightblue", outlier.color = "red") +
labs(title = "Boxplot des notes moyennes (hors jeux non notés)", y = "Note Moyenne") +
theme_minimal()
# Courbe de densité des notes
ggplot(df_notes, aes(x = `Note Moyenne`)) +
geom_density(fill = "orange", alpha = 0.5, color = "black") +
labs(title = "Courbe de densité des notes moyennes", x = "Note Moyenne", y = "Densité") +
theme_minimal()
df_genres <- df %>%
filter(!is.na(Genres) & Genres != "") %>%
separate_rows(Genres, sep = ",\\s*")
genre_summary <- df_genres %>%
filter(`Note Moyenne` > 0) %>%
group_by(Genres) %>%
summarise(Note_Moyenne = mean(`Note Moyenne`, na.rm=TRUE), Nombre_jeux = n(), .groups = "drop") %>%
arrange(desc(Note_Moyenne))
# Boxplot par genre
ggplot(df_genres %>% filter(`Note Moyenne` > 0), aes(x = Genres, y = `Note Moyenne`)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Boxplot des notes par genre", x = "Genre", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Barre des moyennes par genre
ggplot(genre_summary, aes(x = reorder(Genres, -Note_Moyenne), y = Note_Moyenne)) +
geom_col(fill = "darkgreen") +
geom_text(aes(label = round(Note_Moyenne, 2)), vjust = -0.5) +
labs(title = "Note moyenne par genre", x = "Genre", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df_platforms <- df %>%
filter(!is.na(Plateformes) & Plateformes != "") %>%
separate_rows(Plateformes, sep = ",\\s*")
platform_summary <- df_platforms %>%
filter(`Note Moyenne` > 0) %>%
group_by(Plateformes) %>%
summarise(Note_Moyenne = mean(`Note Moyenne`, na.rm=TRUE), Nombre_jeux = n(), .groups = "drop") %>%
arrange(desc(Note_Moyenne))
# Boxplot par plateforme
ggplot(df_platforms %>% filter(`Note Moyenne` > 0), aes(x = Plateformes, y = `Note Moyenne`)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Répartition des notes par plateforme", x = "Plateforme", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Moyenne par plateforme
ggplot(platform_summary, aes(x = reorder(Plateformes, -Note_Moyenne), y = Note_Moyenne)) +
geom_col(fill = "darkorange") +
geom_text(aes(label = round(Note_Moyenne, 2)), vjust = -0.5) +
labs(title = "Note moyenne par plateforme", x = "Plateforme", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df_clust <- df %>%
filter(`Note Moyenne` > 0 & !is.na(Plateformes)) %>%
mutate(nb_plateformes = str_count(Plateformes, ",") + 1) %>%
select(`Note Moyenne`, nb_plateformes)
df_clust_scaled <- scale(df_clust)
kmeans_result <- kmeans(df_clust_scaled, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = df_clust_scaled, geom = "point", ellipse.type = "convex", ggtheme = theme_minimal(), main = "Clustering des jeux")
df_corr <- df %>%
filter(`Note Moyenne` > 0 & !is.na(Plateformes)) %>%
mutate(nb_plateformes = str_count(Plateformes, ",") + 1) %>%
select(`Note Moyenne`, nb_plateformes)
cor_matrix <- cor(df_corr, use = "complete.obs")
melted_corr <- melt(cor_matrix)
# Heatmap
ggplot(melted_corr, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Matrice de corrélation") +
theme_minimal()
dev_freq <- df %>%
filter(!is.na(Développeur) & Développeur != "") %>%
group_by(Développeur) %>%
summarise(Nombre_jeux = n(), .groups = "drop") %>%
arrange(desc(Nombre_jeux))
ggplot(dev_freq, aes(x = reorder(Développeur, -Nombre_jeux), y = Nombre_jeux)) +
geom_col(fill = "dodgerblue") +
geom_text(aes(label = Nombre_jeux), vjust = -0.5) +
labs(title = "Nombre de jeux par Développeur") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df$Date <- as.Date(df$`Date de sortie`, format = "%b %d, %Y")
df_time <- df %>%
filter(!is.na(Date)) %>%
mutate(Mois = format(Date, "%Y-%m")) %>%
group_by(Mois) %>%
summarise(Nombre_jeux = n(), Note_Moyenne = mean(`Note Moyenne`, na.rm = TRUE), .groups = "drop")
# Combo chart
ggplot(df_time, aes(x = Mois)) +
geom_bar(aes(y = Nombre_jeux), stat = "identity", fill = "orchid", alpha = 0.7) +
geom_line(aes(y = Note_Moyenne * max(Nombre_jeux)/max(Note_Moyenne)), group = 1, color = "darkred") +
scale_y_continuous(name = "Nombre de jeux", sec.axis = sec_axis(~. * max(df_time$Note_Moyenne)/max(df_time$Nombre_jeux), name = "Note Moyenne")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Sorties et notes moyennes par mois")
# Lecture du fichier CSV avec encodage Latin1 (pour éviter les problèmes de caractères spéciaux)
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"), show_col_types = FALSE)
df_genres <- df %>%
filter(!is.na(Genres) & Genres != "") %>%
separate_rows(Genres, sep = ",\\s*")
genre_summary <- df_genres %>%
filter(`Note Moyenne` > 0) %>%
group_by(Genres) %>%
summarise(Note_Moyenne = mean(`Note Moyenne`, na.rm=TRUE), Nombre_jeux = n(), .groups = "drop") %>%
arrange(desc(Note_Moyenne))
# Boxplot par genre
ggplot(df_genres %>% filter(`Note Moyenne` > 0), aes(x = Genres, y = `Note Moyenne`)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Boxplot des notes par genre", x = "Genre", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Barre des moyennes par genre
ggplot(genre_summary, aes(x = reorder(Genres, -Note_Moyenne), y = Note_Moyenne)) +
geom_col(fill = "darkgreen") +
geom_text(aes(label = round(Note_Moyenne, 2)), vjust = -0.5) +
labs(title = "Note moyenne par genre", x = "Genre", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df_platforms <- df %>%
filter(!is.na(Plateformes) & Plateformes != "") %>%
separate_rows(Plateformes, sep = ",\\s*")
platform_summary <- df_platforms %>%
filter(`Note Moyenne` > 0) %>%
group_by(Plateformes) %>%
summarise(Note_Moyenne = mean(`Note Moyenne`, na.rm=TRUE), Nombre_jeux = n(), .groups = "drop") %>%
arrange(desc(Note_Moyenne))
# Boxplot par plateforme
ggplot(df_platforms %>% filter(`Note Moyenne` > 0), aes(x = Plateformes, y = `Note Moyenne`)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Répartition des notes par plateforme", x = "Plateforme", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Moyenne par plateforme
ggplot(platform_summary, aes(x = reorder(Plateformes, -Note_Moyenne), y = Note_Moyenne)) +
geom_col(fill = "darkorange") +
geom_text(aes(label = round(Note_Moyenne, 2)), vjust = -0.5) +
labs(title = "Note moyenne par plateforme", x = "Plateforme", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df_clust <- df %>%
filter(`Note Moyenne` > 0 & !is.na(Plateformes)) %>%
mutate(nb_plateformes = str_count(Plateformes, ",") + 1) %>%
select(`Note Moyenne`, nb_plateformes)
df_clust_scaled <- scale(df_clust)
kmeans_result <- kmeans(df_clust_scaled, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = df_clust_scaled, geom = "point", ellipse.type = "convex", ggtheme = theme_minimal(), main = "Clustering des jeux")
# ---------------------------
# 2. Comparaison des genres
# ---------------------------
df_genres <- df %>%
filter(!is.na(Genres) & Genres != "") %>%
separate_rows(Genres, sep = ",\\s*")
genre_summary <- df_genres %>%
filter(`Note Moyenne` > 0) %>%
group_by(Genres) %>%
summarise(Note_Moyenne = mean(`Note Moyenne`, na.rm=TRUE), Nombre_jeux = n(), .groups = "drop") %>%
arrange(desc(Note_Moyenne))
# Boxplot par genre
ggplot(df_genres %>% filter(`Note Moyenne` > 0), aes(x = Genres, y = `Note Moyenne`)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Boxplot des notes par genre", x = "Genre", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Barre des moyennes par genre
ggplot(genre_summary, aes(x = reorder(Genres, -Note_Moyenne), y = Note_Moyenne)) +
geom_col(fill = "darkgreen") +
geom_text(aes(label = round(Note_Moyenne, 2)), vjust = -0.5) +
labs(title = "Note moyenne par genre", x = "Genre", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ---------------------------
# 2. Comparaison des genres
# ---------------------------
# Chargement des packages nécessaires
library(tidyverse)
# Chargement des données
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"))
# Conversion des virgules en points dans la colonne "Note Moyenne"
df$`Note Moyenne` <- as.numeric(str_replace(df$`Note Moyenne`, ",", "."))
# Nettoyage et séparation des genres
df_genres <- df %>%
filter(!is.na(Genres) & Genres != "") %>%
separate_rows(Genres, sep = ",\\s*")
# Calcul de la moyenne des notes et du nombre de jeux par genre
genre_summary <- df_genres %>%
filter(`Note Moyenne` > 0) %>%
group_by(Genres) %>%
summarise(
Note_Moyenne = mean(`Note Moyenne`, na.rm = TRUE),
Nombre_jeux = n(),
.groups = "drop"
) %>%
arrange(desc(Note_Moyenne))
# Chargement des données
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"))
# ---------------------------
# 1. Tendance générale des notes
# ---------------------------
# Chargement des données
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"), show_col_types = FALSE)
# Chargement des données
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"), show_col_types = FALSE)
# ---------------------------
# 2. Comparaison des genres
# ---------------------------
# Chargement des données
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"), show_col_types = FALSE)
# Conversion des virgules en points dans la colonne "Note Moyenne"
df$`Note Moyenne` <- as.numeric(str_replace(df$`Note Moyenne`, ",", "."))
# Nettoyage et séparation des genres
df_genres <- df %>%
filter(!is.na(Genres) & Genres != "") %>%
separate_rows(Genres, sep = ",\\s*")
# Calcul de la moyenne des notes et du nombre de jeux par genre
genre_summary <- df_genres %>%
filter(`Note Moyenne` > 0) %>%
group_by(Genres) %>%
summarise(
Note_Moyenne = mean(`Note Moyenne`, na.rm = TRUE),
Nombre_jeux = n(),
.groups = "drop"
) %>%
arrange(desc(Note_Moyenne))
# ---------------------------
# 2. Comparaison des genres
# ---------------------------
df_genres <- df %>%
filter(!is.na(Genres) & Genres != "") %>%
separate_rows(Genres, sep = ",\\s*")
genre_summary <- df_genres %>%
filter(`Note Moyenne` > 0) %>%
group_by(Genres) %>%
summarise(Note_Moyenne = mean(`Note Moyenne`, na.rm=TRUE), Nombre_jeux = n(), .groups = "drop") %>%
arrange(desc(Note_Moyenne))
# Boxplot par genre
ggplot(df_genres %>% filter(`Note Moyenne` > 0), aes(x = Genres, y = `Note Moyenne`)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Boxplot des notes par genre", x = "Genre", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Barre des moyennes par genre
ggplot(genre_summary, aes(x = reorder(Genres, -Note_Moyenne), y = Note_Moyenne)) +
geom_col(fill = "darkgreen") +
geom_text(aes(label = round(Note_Moyenne, 2)), vjust = -0.5) +
labs(title = "Note moyenne par genre", x = "Genre", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ---------------------------
# 3. Plateformes et notes
# ---------------------------
df_platforms <- df %>%
filter(!is.na(Plateformes) & Plateformes != "") %>%
separate_rows(Plateformes, sep = ",\\s*")
platform_summary <- df_platforms %>%
filter(`Note Moyenne` > 0) %>%
group_by(Plateformes) %>%
summarise(Note_Moyenne = mean(`Note Moyenne`, na.rm=TRUE), Nombre_jeux = n(), .groups = "drop") %>%
arrange(desc(Note_Moyenne))
# Boxplot par plateforme
ggplot(df_platforms %>% filter(`Note Moyenne` > 0), aes(x = Plateformes, y = `Note Moyenne`)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Répartition des notes par plateforme", x = "Plateforme", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Moyenne par plateforme
ggplot(platform_summary, aes(x = reorder(Plateformes, -Note_Moyenne), y = Note_Moyenne)) +
geom_col(fill = "darkorange") +
geom_text(aes(label = round(Note_Moyenne, 2)), vjust = -0.5) +
labs(title = "Note moyenne par plateforme", x = "Plateforme", y = "Note Moyenne") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ---------------------------
# 4. Clustering
# ---------------------------
df_clust <- df %>%
filter(`Note Moyenne` > 0 & !is.na(Plateformes)) %>%
mutate(nb_plateformes = str_count(Plateformes, ",") + 1) %>%
select(`Note Moyenne`, nb_plateformes)
df_clust_scaled <- scale(df_clust)
kmeans_result <- kmeans(df_clust_scaled, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = df_clust_scaled, geom = "point", ellipse.type = "convex", ggtheme = theme_minimal(), main = "Clustering des jeux")
# ---------------------------
# 5. Corrélation
# ---------------------------
df_corr <- df %>%
filter(`Note Moyenne` > 0 & !is.na(Plateformes)) %>%
mutate(nb_plateformes = str_count(Plateformes, ",") + 1) %>%
select(`Note Moyenne`, nb_plateformes)
cor_matrix <- cor(df_corr, use = "complete.obs")
melted_corr <- melt(cor_matrix)
# Heatmap
ggplot(melted_corr, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Matrice de corrélation") +
theme_minimal()
# ---------------------------
# 6. Fréquence développeurs et éditeurs
# ---------------------------
dev_freq <- df %>%
filter(!is.na(Développeur) & Développeur != "") %>%
group_by(Développeur) %>%
summarise(Nombre_jeux = n(), .groups = "drop") %>%
arrange(desc(Nombre_jeux))
ggplot(dev_freq, aes(x = reorder(Développeur, -Nombre_jeux), y = Nombre_jeux)) +
geom_col(fill = "dodgerblue") +
geom_text(aes(label = Nombre_jeux), vjust = -0.5) +
labs(title = "Nombre de jeux par Développeur") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ---------------------------
# 7. Évolution temporelle
# ---------------------------
df$Date <- as.Date(df$`Date de sortie`, format = "%b %d, %Y")
df_time <- df %>%
filter(!is.na(Date)) %>%
mutate(Mois = format(Date, "%Y-%m")) %>%
group_by(Mois) %>%
summarise(Nombre_jeux = n(), Note_Moyenne = mean(`Note Moyenne`, na.rm = TRUE), .groups = "drop")
# Combo chart
ggplot(df_time, aes(x = Mois)) +
geom_bar(aes(y = Nombre_jeux), stat = "identity", fill = "orchid", alpha = 0.7) +
geom_line(aes(y = Note_Moyenne * max(Nombre_jeux)/max(Note_Moyenne)), group = 1, color = "darkred") +
scale_y_continuous(name = "Nombre de jeux", sec.axis = sec_axis(~. * max(df_time$Note_Moyenne)/max(df_time$Nombre_jeux), name = "Note Moyenne")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Sorties et notes moyennes par mois")
# ---------------------------
# 8. Franchises
# ---------------------------
df_franchise <- df %>%
mutate(Avec_Franchise = ifelse(is.na(Franchise) | Franchise == "", "Sans Franchise", "Avec Franchise")) %>%
filter(`Note Moyenne` > 0)
# Boxplot
ggplot(df_franchise, aes(x = Avec_Franchise, y = `Note Moyenne`)) +
geom_boxplot(fill = "mediumpurple") +
labs(title = "Comparaison des notes avec ou sans franchise") +
theme_minimal()
# ---------------------------
# 9. Régression linéaire
# ---------------------------
df_reg <- df %>%
filter(`Note Moyenne` > 0 & !is.na(Plateformes)) %>%
mutate(nb_plateformes = str_count(Plateformes, ",") + 1)
modele <- lm(`Note Moyenne` ~ nb_plateformes, data = df_reg)
summary(modele)
# Graphique
ggplot(df_reg, aes(x = nb_plateformes, y = `Note Moyenne`)) +
geom_point(color = "blue", alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Régression : Note Moyenne vs Nombre de plateformes") +
theme_minimal()
#Analyse :
cat("Le graphique montre une légère corrélation positive entre le nombre de plateformes et la note moyenne des jeux. Les jeux disponibles sur plusieurs plateformes tendent à obtenir de meilleures notes, bien que cette tendance reste modérée. Une forte dispersion des données suggère que d'autres facteurs influencent aussi la qualité perçue. Ce résultat indique que la portée multiplateforme peut être un avantage, mais n’est pas un gage de succès.")
# ---------------------------
# 9. Régression linéaire
# ---------------------------
df_reg <- df %>%
filter(`Note Moyenne` > 0 & !is.na(Plateformes)) %>%
mutate(nb_plateformes = str_count(Plateformes, ",") + 1)
modele <- lm(`Note Moyenne` ~ nb_plateformes, data = df_reg)
summary(modele)
# Graphique
ggplot(df_reg, aes(x = nb_plateformes, y = `Note Moyenne`)) +
geom_point(color = "blue", alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Régression : Note Moyenne vs Nombre de plateformes") +
theme_minimal()
# ---------------------------
# 8. Franchises
# ---------------------------
# Conversion correcte des notes avec virgules
df$`Note Moyenne` <- as.numeric(gsub(",", ".", df$`Note Moyenne`))
# Création d'une variable indiquant la présence d'une franchise
df_franchise <- df %>%
mutate(Avec_Franchise = ifelse(is.na(Franchise) | Franchise == "", "Sans Franchise", "Avec Franchise")) %>%
filter(`Note Moyenne` > 0)  # filtrer les notes valides
# Nouveau boxplot propre
ggplot(df_franchise, aes(x = Avec_Franchise, y = `Note Moyenne`)) +
geom_boxplot(fill = "mediumpurple") +
labs(title = "Comparaison des notes avec ou sans franchise", x = "Franchise", y = "Note Moyenne") +
theme_minimal()
# ---------------------------
# 8. Franchises
# ---------------------------
# Conversion correcte des notes avec virgules
df$`Note Moyenne` <- as.numeric(gsub(",", ".", df$`Note Moyenne`))
# Création d'une variable indiquant la présence d'une franchise
df_franchise <- df %>%
mutate(Avec_Franchise = ifelse(is.na(Franchise) | Franchise == "", "Sans Franchise", "Avec Franchise")) %>%
filter(`Note Moyenne` > 0)
ggplot(df_franchise, aes(x = Avec_Franchise, y = `Note Moyenne`)) +
geom_boxplot(fill = "mediumpurple") +
labs(title = "Comparaison des notes avec ou sans franchise", x = "Franchise", y = "Note Moyenne") +
theme_minimal()
# ---------------------------
# 8. Franchises
# ---------------------------
df$`Note Moyenne` <- as.numeric(gsub(",", ".", df$`Note Moyenne`))
# Création d'une variable indiquant la présence d'une franchise
df_franchise <- df %>%
mutate(Avec_Franchise = ifelse(is.na(Franchise) | Franchise == "", "Sans Franchise", "Avec Franchise")) %>%
filter(!is.na(`Note Moyenne`) & `Note Moyenne` > 0)
ggplot(df_franchise, aes(x = Avec_Franchise, y = `Note Moyenne`)) +
geom_boxplot(fill = "mediumpurple") +
labs(title = "Comparaison des notes avec ou sans franchise",
x = "Franchise", y = "Note Moyenne") +
theme_minimal()
df$`Note Moyenne` <- as.numeric(gsub(",", ".", df$`Note Moyenne`))
str(df$`Note Moyenne`)  # Doit afficher "numérique"
summary(df$`Note Moyenne`)  # Doit afficher Min, Max, Mean, etc.
# Importer les données avec la colonne Note Moyenne comme texte
df <- read_delim("grouvee_2024_games.csv", delim = ";", locale = locale(encoding = "Latin1"), col_types = cols(
`Note Moyenne` = col_character()
))
# Correction : Remplacer les virgules et convertir en numérique
df$`Note Moyenne` <- as.numeric(gsub(",", ".", df$`Note Moyenne`))
# Vérification
str(df$`Note Moyenne`)
summary(df$`Note Moyenne`)
ggplot(df_franchise, aes(x = Avec_Franchise, y = `Note Moyenne`)) +
geom_boxplot(fill = "mediumpurple") +
labs(title = "Comparaison des notes avec ou sans franchise",
x = "Franchise", y = "Note Moyenne") +
theme_minimal()
